version: '3.2'
services:
  gateway:
    container_name: gatewayService
    image: john/final667
    build: .
    ports:
      - '3004:3004'
    command: ['node', './services/gateway.js']
    depends_on: ['redisServer']
    environment:
      - NODE_ENV=prod
    deploy:
      replicas: 1
  fileServer:
    container_name: fileServer
    image: john/final667
    command: ['node', './services/fileServer.js']
    depends_on: ['redisServer']
    deploy:
      replicas: 1
  register:
    container_name: registerServer
    image: john/final667
    command: ['node', './services/registerServer.js']
    depends_on: ['redisServer']
    deploy:
      replicas: 1
  auth:
    container_name: authService
    image: john/final667
    command: ['node', './services/authService.js']
    depends_on: ['redisServer']
    deploy:
      replicas: 1
  notes:
    container_name: notesService
    image: john/final667
    command: ['node', './services/noteService.js']
    environment:
      - REDISHOST=redisServer
      - NODE_ENV=prod
    depends_on: ['redisServer']
    deploy:
      replicas: 1
  restaurant:
    container_name: restaurantService
    image: john/final667
    build: .
    command: ['node', './services/restaurantServer.js']
  restaurantConsumer:
    container_name: restaurantConsumerService
    image: john/final667
    build: .
    command: ['node', './services/restaurantConsumer.js']
  redisServer:
    image: redis
    container_name: redisCache
    deploy:
      replicas: 1
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    deploy:
      replicas: 1
  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: '9092'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    deploy:
      replicas: 1
